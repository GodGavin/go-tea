// This file is automatically generated by qtc from "main.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line views/main.qtpl:1
package views

//line views/main.qtpl:2
import "github.com/jpincas/go-tea"

//line views/main.qtpl:3
import "github.com/jpincas/go-tea/examples/memorygame/types"

//line views/main.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/main.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/main.qtpl:4
func StreamMain(qw422016 *qt422016.Writer, s gotea.Session) {
	//line views/main.qtpl:4
	qw422016.N().S(`

<style>
    #deck {
        display: flex;
        flex-wrap: wrap;
    }

    .card-container {
        display: flex;
        flex-direction: column;
    }

    .card {
        width: 150px;
        height: 250px;
        margin: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid grey;
        border-radius: 5px;
    }

    .card.unmatched {
        cursor: pointer;
    }

    .card .value {
        font-size: 5em;
    }

    .card.facedown {
        background-color: cornflowerblue;
    }

    .card.facedown.card.matched {
        background-color: green;
    }
</style>

`)
	//line views/main.qtpl:45
	m := s.State.(types.Model)

	//line views/main.qtpl:45
	qw422016.N().S(`

<h1>Card Memory Game</h1>
<h2>Turns Taken: `)
	//line views/main.qtpl:48
	qw422016.N().D(m.TurnsTaken)
	//line views/main.qtpl:48
	qw422016.N().S(` Pairs Found: `)
	//line views/main.qtpl:48
	qw422016.N().D(m.Score)
	//line views/main.qtpl:48
	qw422016.N().S(`</h2>

`)
	//line views/main.qtpl:50
	if m.HasWon() {
		//line views/main.qtpl:50
		qw422016.N().S(` Well Done! You Won! `)
		//line views/main.qtpl:50
	}
	//line views/main.qtpl:50
	qw422016.N().S(` `)
	//line views/main.qtpl:50
	StreamRenderDeck(qw422016, m.Deck)
	//line views/main.qtpl:50
	qw422016.N().S(` `)
//line views/main.qtpl:50
}

//line views/main.qtpl:50
func WriteMain(qq422016 qtio422016.Writer, s gotea.Session) {
	//line views/main.qtpl:50
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line views/main.qtpl:50
	StreamMain(qw422016, s)
	//line views/main.qtpl:50
	qt422016.ReleaseWriter(qw422016)
//line views/main.qtpl:50
}

//line views/main.qtpl:50
func Main(s gotea.Session) string {
	//line views/main.qtpl:50
	qb422016 := qt422016.AcquireByteBuffer()
	//line views/main.qtpl:50
	WriteMain(qb422016, s)
	//line views/main.qtpl:50
	qs422016 := string(qb422016.B)
	//line views/main.qtpl:50
	qt422016.ReleaseByteBuffer(qb422016)
	//line views/main.qtpl:50
	return qs422016
//line views/main.qtpl:50
}
